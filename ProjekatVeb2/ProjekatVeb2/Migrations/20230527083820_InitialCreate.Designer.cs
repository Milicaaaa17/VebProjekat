// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjekatVeb2.Data;

#nullable disable

namespace ProjekatVeb2.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20230527083820_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjekatVeb2.Models.Artikal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<int>("IdKorisnik")
                        .HasColumnType("int");

                    b.Property<bool>("Izbrisan")
                        .HasColumnType("bit");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdKorisnik");

                    b.ToTable("Artikli");
                });

            modelBuilder.Entity("ProjekatVeb2.Models.Korisnik", b =>
                {
                    b.Property<int>("IdK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdK"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImePrezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifikacijaKorisnika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdK");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("ProjekatVeb2.Models.Porudzbina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<int>("IdKorisnik")
                        .HasColumnType("int");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VerifikacijaPorudzbine")
                        .HasColumnType("int");

                    b.Property<DateTime>("VrijemeDostave")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VrijemePorucivanja")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdKorisnik");

                    b.ToTable("Porudzbine");
                });

            modelBuilder.Entity("ProjekatVeb2.Models.PoruzdbinaArtikal", b =>
                {
                    b.Property<int>("IdPorudzbina")
                        .HasColumnType("int");

                    b.Property<int>("ArtikalID")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.HasKey("IdPorudzbina", "ArtikalID");

                    b.HasIndex("ArtikalID");

                    b.ToTable("PoruzdbinaArtikli");
                });

            modelBuilder.Entity("ProjekatVeb2.Models.Artikal", b =>
                {
                    b.HasOne("ProjekatVeb2.Models.Korisnik", "Korisnik")
                        .WithMany("Artikili")
                        .HasForeignKey("IdKorisnik")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("ProjekatVeb2.Models.Porudzbina", b =>
                {
                    b.HasOne("ProjekatVeb2.Models.Korisnik", "Korisnik")
                        .WithMany("Porudzbine")
                        .HasForeignKey("IdKorisnik")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("ProjekatVeb2.Models.PoruzdbinaArtikal", b =>
                {
                    b.HasOne("ProjekatVeb2.Models.Artikal", "Artikal")
                        .WithMany("PoruceniArtikli")
                        .HasForeignKey("ArtikalID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjekatVeb2.Models.Porudzbina", "Porudzbina")
                        .WithMany("PoruceniArtikli")
                        .HasForeignKey("IdPorudzbina")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Artikal");

                    b.Navigation("Porudzbina");
                });

            modelBuilder.Entity("ProjekatVeb2.Models.Artikal", b =>
                {
                    b.Navigation("PoruceniArtikli");
                });

            modelBuilder.Entity("ProjekatVeb2.Models.Korisnik", b =>
                {
                    b.Navigation("Artikili");

                    b.Navigation("Porudzbine");
                });

            modelBuilder.Entity("ProjekatVeb2.Models.Porudzbina", b =>
                {
                    b.Navigation("PoruceniArtikli");
                });
#pragma warning restore 612, 618
        }
    }
}
